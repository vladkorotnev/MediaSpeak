/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: /System/Library/PrivateFrameworks/VoiceServices.framework/VoiceServices
 */

#import "VoiceServices-Structs.h"
#import <Foundation/NSObject.h>

@class NSString, VSSpeechSynthesizer, NSArray, VSRecognitionAction;
@protocol VSRecognitionSessionDelegate;

@interface VSRecognitionSession : NSObject {
	NSString *_modelIdentifier;
	void *_keepAlive;
	id<VSRecognitionSessionDelegate> _delegate;
	VSRecognitionAction *_currentAction;
	NSArray *_topLevelKeywords;
	id _handlingThread;
	VSSpeechSynthesizer *_synthesizer;
	NSString *_languageID;
	NSString *_debugDumpPath;
	NSString *_audioInputPath;
	double _levelInterval;
	unsigned _keywordPhase;
	struct {
		unsigned delegateWillBegin : 1;
		unsigned delegateBegin : 1;
		unsigned delegateOpenURL : 1;
		unsigned delegateFinishedSpeaking : 1;
		unsigned delegateComplete : 1;
		unsigned debugDumpEnabled : 1;
		unsigned preferredEngine : 2;
		unsigned performHandlerActions : 1;
		unsigned allowSensitiveActions : 1;
		unsigned bluetoothAllowed : 1;
		unsigned resetNextAction : 1;
		unsigned isSpeaking : 1;
		unsigned actionBegan : 1;
		unsigned actionBeginning : 1;
		unsigned actionBeginDeferred : 1;
		unsigned invalid : 1;
		unsigned observeKeywordChange : 1;
	} _sessionFlags;
}
@property(readonly, retain) NSString *debugDumpPath;	// G=0x7e48; 
@property(assign) BOOL sensitiveActionsEnabled;	// G=0x7e28; S=0x7e00; 
- (id)init;	// 0x91c4
- (id)initWithModelIdentifier:(id)modelIdentifier;	// 0x9140
- (void)_actionCompleted:(id)completed nextAction:(id)action error:(id)error;	// 0x8b1c
- (BOOL)_actionStarted:(id)started;	// 0x8a54
- (id)_beginSpeakingAttributedString:(id)string;	// 0x8240
- (id)_beginSpeakingString:(id)string attributedString:(id)string2;	// 0x9f60
- (CFDictionaryRef)_createKeywordIndex;	// 0x99fc
- (id)_createPhaseSortedKeywordsFromArray:(id)array;	// 0x9b08
- (id)_currentRecognizeAction;	// 0x86a4
- (void)_init;	// 0x90f0
- (void)_keywordIndexChanged;	// 0x8318
- (id)_keywordsForModelIdentifier:(id)modelIdentifier;	// 0x9ea8
- (void)_notifyDelegateActionStarted;	// 0x8a0c
- (void)_notifyDelegateFinishedSpeakingWithError:(id)error;	// 0x81f0
- (id)_notifyDelegateOpenURL:(id)url;	// 0x89b4
- (id)_recognitionResultHandlingThread;	// 0x8624
- (void)_setAction:(id)action;	// 0x8718
- (id)_topLevelKeywords;	// 0x9db4
- (id)beginNextAction;	// 0x9728
- (id)beginSpeakingFeedbackString;	// 0x9530
- (id)beginSpeakingString:(id)string;	// 0x82ac
- (id)cancel;	// 0x8dd8
- (id)cancelMaintainingKeepAlive:(BOOL)alive;	// 0x921c
- (void)dealloc;	// 0x938c
- (id)displayResultString;	// 0x8568
- (id)displayStatusString;	// 0x853c
- (BOOL)hasDeferredAction;	// 0x7da0
- (float)inputLevel;	// 0x8494
- (BOOL)isActivelyRecognizing;	// 0x8f10
- (BOOL)isBusy;	// 0x7dbc
- (BOOL)isFinished;	// 0x7d64
- (BOOL)isRecognizing;	// 0x8f58
- (BOOL)isValid;	// 0x7d80
- (id)keywordAtIndex:(int)index;	// 0x8404
- (int)keywordCount;	// 0x83d8
- (BOOL)nextActionWillRecognize;	// 0x8e98
- (BOOL)nextActionWillTerminateSession;	// 0x8edc
- (void)recognitionResultHandlingThread:(id)thread didHandleResults:(id)results nextAction:(id)action;	// 0x85ec
- (id)reset;	// 0x9628
- (BOOL)setBluetoothInputAllowed:(BOOL)allowed;	// 0x8df8
- (BOOL)setDebugDumpEnabled:(BOOL)enabled;	// 0x807c
- (void)setDelegate:(id)delegate;	// 0x8fa0
- (void)setInputLevelUpdateInterval:(double)interval;	// 0x84cc
- (void)setKeywordPhase:(unsigned)phase;	// 0x8438
- (BOOL)setNextRecognitionAudioInputPath:(id)path;	// 0x7fdc
- (BOOL)setNextRecognitionRequiresReset:(BOOL)reset;	// 0x7f34
- (void)setPerformRecognitionHandlerActions:(BOOL)actions;	// 0x7e5c
- (BOOL)setPreferredEngine:(int)engine;	// 0x7ea4
- (void)speechSynthesizer:(id)synthesizer didFinishSpeaking:(BOOL)speaking withError:(id)error;	// 0x8194
- (id)spokenFeedbackAttributedString;	// 0x8594
- (id)spokenFeedbackString;	// 0x85c0
@end

